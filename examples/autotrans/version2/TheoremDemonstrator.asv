%% Load the agent
load("LOKI_autotrans.mat","agentObj")

% Load the system settings
load('system_param_settings.mat')
vmax = 120;
Tf = 20;
Ts = 1.0;
tau = 20;
initrpm=700   % Init states for RPM, 600 is the lower bound. 

% State sampling
% state_sample = unifrnd(stateLowerLimits,stateUpperLimits)

% Training init state (the origin one)
state_sample = [initrpm; 0]


% Network Actions
critic = getCritic(agentObj);
action = getAction(agentObj,state_sample);
state_value_origin = getValue(critic,{state_sample}, action)


%% init env
obsInfo = rlNumericSpec([2 1],...
    LowerLimit=stateLowerLimits,...
    UpperLimit=stateUpperLimits);
obsInfo.Name="observations";
obsInfo.Description="rpm, speed";

actInfo=rlNumericSpec([2 1],...
    LowerLimit=actionLowerLimits,...
    UpperLimit=actionUpperLimits); % brake upper limit should be 325
actInfo.Name="throttle, brake";

env=rlSimulinkEnv("LOKI_autotrans2","LOKI_autotrans2/RL Agent",...
    obsInfo,actInfo);

%% define sim options
simOpts = rlSimulationOptions(...
    MaxSteps=30,...
    NumSimulations=1)
experience = sim(env,agentObj,simOpts)

% velocity = get(experience.recordout,3).
% Values.Data;


blah = load('600_1.mat')
y3 = blah.ans.Data
plot(ts,y1(:,2),'-r.',ts,y2(:,2),'-b.',ts,y3(:,2),'-m.')
ts = blah.ans.Time

%% Get value diff
% Sample different states and get the value diff between two iters
% If only one ini state, then calculate one diff is enough?



%% Test the theorem
gamma = 0.9;  % discount factor of the agent
alpha =  value_diff_between_two_iter * 2 * gamma / (1 - gamma);

action = getAction(agentObj,state_sample_new);
state_value_new = getValue(critic,{state_sample}, action)
beta = abs(state_value_new - state_value_origin)

rho_thoerem = rho - (2*alpha + beta)/(gamma .^ tau) 

